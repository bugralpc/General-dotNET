using System.Reflection;

namespace ConsoleApp_Reflection_1
{
    // Reflection allows to inspect and manipulate classes and its propoerties and methods

    // Block called Assembly which is automatically generated by the compiler after compilation of code.
    // Assembly consists of two parts; intermediate language and metadata

    // C# codes do not directly compiled into machine-level language. It is first compiled into an intermediage language which is packeaged
    // int assembly.

    // The primary way to access the metadata is by using the Type class
    internal class Program
    {
        public class Student
        {
            public string name = "";
            public int age;

            public void Info()
            {
                Console.WriteLine(name + "is " + age + " years old.");
            }

        }

        static void Main(string[] args)
        {
            string studentName = "Sauron";

            Type studentNameType = studentName.GetType();

            Console.WriteLine("Type is: " + studentNameType); // gives the class name.

            Type t1 = typeof(Program);

            Console.WriteLine("Type of Program: " + t1);
            Console.WriteLine("Assembly of Program: " + t1.Assembly);

            Type t2 = typeof(Enumerable);

            Console.WriteLine("Name: " + t2.Name);
            Console.WriteLine("Namespace: " + t2.Namespace);
            Console.WriteLine("Base Type: " + t2.BaseType);

            Console.WriteLine("--------");

            Type t3 = typeof(String);

            // Type class gives information about the String Type
            Console.WriteLine("Name: {0}", t3.Name);
            Console.WriteLine("Namespace : {0}", t3.Namespace);
            Console.WriteLine("Base Type : {0}", t3.BaseType);

            //
            int i = 1;
            Type type = i.GetType();
            Console.WriteLine(type);

            // Using reflection to get information of an Assembly
            Assembly info = typeof(int).Assembly;
            Console.WriteLine(info);

            //

        }
    }
}